// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model StudentUser {
  id         Int    @id @default(autoincrement())
  first_name String
  last_name  String
  prefix     String

  username String @unique
  email    String @unique
  password String

  created_at  DateTime @default(now())
  modified_at DateTime @default(now())

  image_url          String               @default("Leaves.jpg")
  phone_number       String               @default("000000000")
  course             Course[]
  assignment_student Assignment_Student[]
}

model InstructorUser {
  id         Int    @id @default(autoincrement())
  first_name String
  last_name  String
  prefix     String

  username String @unique
  email    String @unique
  password String

  created_at  DateTime @default(now())
  modified_at DateTime @default(now())

  image_url    String   @default("Leaves.jpg")
  phone_number String   @default("000000000")
  course       Course[]
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model Course {
  id               Int      @id @default(autoincrement())
  name             String
  category         String
  course_desc      String   @default("")
  course_detail    String   @default("")
  course_cover_url String   @default("Leaves.jpg")
  guide_url        String
  course_material  String[]

  instructor    InstructorUser @relation(fields: [instructor_id], references: [id])
  instructor_id Int
  max_student   Int            @default(-1)
  curr_student  Int            @default(0)

  studentUser StudentUser[]
  assignment  Assignment[]
  courseVideo CourseVideo[]

  created_at  DateTime @default(now())
  modified_at DateTime @default(now())
}

model CourseVideo {
  id          Int      @id @default(autoincrement())
  name        String
  video_url   String
  course_id   Int
  course      Course   @relation(fields: [course_id], references: [id])
  created_at  DateTime @default(now())
  modified_at DateTime @default(now())
}

model Assignment {
  id          Int    @id @default(autoincrement())
  name        String
  description String @default("")
  aj_file_url String @default("")
  max_score   Int

  course_id Int
  course    Course @relation(fields: [course_id], references: [id])

  created_at  DateTime @default(now())
  modified_at DateTime @default(now())

  assignment_student Assignment_Student[]
}

model HomeworkFile {
  id            Int                @id @default(autoincrement())
  student_id    Int
  assignment_id Int
  assignment    Assignment_Student @relation(fields: [assignment_id], references: [id])
  file_url      String

  created_at  DateTime @default(now())
  modified_at DateTime @default(now())
}

model Assignment_Student {
  id          Int     @id @default(autoincrement())
  isSubmitted Boolean @default(false)
  isScored    Boolean @default(false)
  get_score   Int     @default(0)

  modified_at    DateTime     @default(now())
  StudentUser    StudentUser? @relation(fields: [studentUser_id], references: [id])
  studentUser_id Int?
  Assignment     Assignment?  @relation(fields: [assignment_id], references: [id])
  assignment_id  Int?

  HomeworkFile HomeworkFile[]
}
